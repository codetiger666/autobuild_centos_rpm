name: build_rpm_rocky9
on:
  workflow_dispatch:
      inputs:
        ssh:
          description: 'SSH connection to Actions'
          required: true
          default: 'false'
  # schedule:
  #   - cron: 0 10 * * *

env:
  OPENRESTYVERSION: 1.21.4.1
  ZABBIXBASEVERSION: 6
  ZABBIXVERSION: 6.0.10
  FRPVERSION: 0.52.3
  OPENSSLVERSION: 1.1.1q
  REMOVE_WORKFLOW_RUNS: true

jobs:     
  centos-build-rpms:
    name: centos-build-rpms
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/localtime
        sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        # sudo apt remove php* dotnet* google* 
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
 
    - name: run-rocky
      # 出错继续
      continue-on-error: true
      run: |
        mkdir rpm
        centos=`docker run -itd -v $(pwd)/rpm:/opt rockylinux:9`
        echo "export centos=$centos" >> $HOME/.profile
        source $HOME/.profile
        docker exec -i $centos dnf install wget -y
        docker exec -i $centos rm -rf /etc/yum.repos.d
        docker exec -i $centos mkdir /etc/yum.repos.d
        docker exec -i $centos wget -P /etc/yum.repos.d/ https://raw.githubusercontent.com/codetiger666/linux/master/scripts/linux/rocky/rocky.repo
        docker exec -i $centos dnf install -y pcre-devel libevent-devel net-snmp-devel mysql-community-client mysql-community-common mysql-community-devel mysql-community-libs rpmdevtools libssh2-devel OpenIPMI-devel openssl-devel libxslt* perl-ExtUtils-Embed gcc-c++ python subversion gperf make rpm-build git curl bzip2-devel libcurl-devel gd gd-devel  libtidy libtidy-devel GeoIP-devel libatomic_ops-devel zlib-devel unzip libstdc++* net-snmp-utils gmp gmp-devel gmp gmp-devel openldap openldap-devel libpcap-devel glib2-devel GeoIP-devel libxml2-devel libxml2-devel vim wget automake mlocate openssl-devel pam-devel unzip gcc screen openssl openssl-devel bash-completion* pcre-devel libxslt* perl-ExtUtils-Embed gcc-c++ --skip-broken
        docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
        docker exec -i $centos rpmdev-setuptree
        docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
        
    - name: clone modules
      run: |
        cd rpm
        git clone https://github.com/nicholaschiasson/ngx_upstream_jdomain.git
        git clone https://github.com/GUI/nginx-upstream-dynamic-servers.git

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    # 编译openresty
    - name: build-openresty
      run: |
        curl https://raw.githubusercontent.com/codetiger666/linux/master/scripts/linux/systemctl-scripts/nginx.service > nginx.service
        curl https://raw.githubusercontent.com/codetiger666/linux/master/scripts/linux/nginx/default.conf > default.conf
        curl https://raw.githubusercontent.com/codetiger666/linux/master/scripts/linux/nginx/nginx.conf > nginx.conf
        sudo /bin/cp nginx.service rpm/rpmbuild/SOURCES
        sudo /bin/cp default.conf rpm/rpmbuild/SOURCES
        sudo /bin/cp nginx.conf rpm/rpmbuild/SOURCES
        cp services/onedrive.service rpm/rpmbuild/SOURCES
        sudo sed -i "s/codetiger_version/$OPENRESTYVERSION/g" specs/openresty.spec
        sudo /bin/cp specs/openresty.spec rpm/rpmbuild/SPECS/
        wget https://openresty.org/download/openresty-$OPENRESTYVERSION.tar.gz
        sudo /bin/cp openresty-$OPENRESTYVERSION.tar.gz rpm/rpmbuild/SOURCES/
        source $HOME/.profile
        docker stop $centos
        docker start $centos
        docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
        docker exec -i $centos rpmbuild -ba /opt/rpmbuild/SPECS/openresty.spec

    - name: build-frp
      continue-on-error: true
      run: |
        sudo /bin/cp frp/frpc.service rpm/rpmbuild/SOURCES
        sudo /bin/cp frp/frps.service rpm/rpmbuild/SOURCES
        sudo sed -i "s/codetiger_version/$FRPVERSION/g" specs/frp.spec
        sudo /bin/cp specs/frp.spec rpm/rpmbuild/SPECS/
        wget https://github.com/fatedier/frp/releases/download/v$FRPVERSION/frp_"$FRPVERSION"_linux_amd64.tar.gz
        sudo /bin/cp frp_"$FRPVERSION"_linux_amd64.tar.gz rpm/rpmbuild/SOURCES/
        source $HOME/.profile
        docker stop $centos
        docker start $centos
        docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
        docker exec -i $centos rpmbuild -ba /opt/rpmbuild/SPECS/frp.spec

    - name: copy realease
      # 出错继续
      # continue-on-error: true
      run: |
        sudo mkdir -p centos_rpms/rocky/9/x86_64/
        cd centos_rpms
        if [ -n "ls rocky/9/x86_64/openresty*.x86_64.rpm >/dev/null 2>&1" ]; then
            sudo git rm -f rocky/9/x86_64/openresty*.x86_64.rpm
        fi
        if [ -n "ls rocky/9/x86_64/frp*.x86_64.rpm >/dev/null 2>&1" ]; then
            sudo git rm -f rocky/9/x86_64/frp*.x86_64.rpm
        fi
        cd ..
        sudo /bin/cp rpm/rpmbuild/RPMS/x86_64/openresty-$OPENRESTYVERSION-1.el9.x86_64.rpm centos_rpms/rocky/9/x86_64/
        sudo /bin/cp rpm/rpmbuild/RPMS/x86_64/frp-$FRPVERSION-1.el9.x86_64.rpm centos_rpms/rocky/9/x86_64/
        rpms=`docker run -itd -v $(pwd)/centos_rpms:/centos_rpms rockylinux:9`
        docker exec -i $rpms dnf install createrepo -y
        docker exec -i $rpms createrepo /centos_rpms/rocky/9/x86_64/ 

    - name: git add
      working-directory: ./centos_rpms
      run: |
        git config --local user.email ${{ secrets.email }}
        git config --local user.name "codetiger666"
        git pull
        git add ./
        git commit -m "update openresty"
        git pull

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     directory: ./centos_rpms
    #     repository: codetiger666/centos_rpms
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: main
    - name: Pushes to another repository
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.GITHUBTOKEN }}
      with:
        source-directory: 'centos_rpms'
        destination-github-username: 'codetiger666'
        destination-repository-name: 'centos_rpms'
        user-email: ${{ secrets.email }}
        target-branch: main
    
    - name: Remove workflow runs
      uses: GitRML/delete-workflow-runs@main
      if: env.REMOVE_WORKFLOW_RUNS == 'true' && !cancelled()
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: SSH connection to Actions 1
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
